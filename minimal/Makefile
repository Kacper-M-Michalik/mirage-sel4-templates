ifeq ($(strip $(MICROKIT_SDK)),)
$(error MICROKIT_SDK must be specified)
endif

ifeq ($(strip $(MICROKIT_BOARD)),)
$(error MICROKIT_BOARD must be specified)
endif

ifeq ($(strip $(MICROKIT_CONFIG)),)
$(error MICROKIT_CONFIG must be specified)
endif

GUEST_FILE ?= ./../example-kernels/hello.hvt

# Make absolute
override MICROKIT_SDK := $(realpath $(MICROKIT_SDK))
override GUEST_FILE := $(realpath $(GUEST_FILE))

# Since the clean deletes the folder, best disallow user from changing build dir
override BUILD_DIR := $(abspath ./build)

# Core paths
BOARD_DIR := $(MICROKIT_SDK)/board/$(MICROKIT_BOARD)/$(MICROKIT_CONFIG)
ARCH := $(shell grep 'CONFIG_SEL4_ARCH  ' $(BOARD_DIR)/include/kernel/gen_config.h | cut -d' ' -f4)
DEPS := $(realpath ./deps)
INC_DIR := $(realpath ./)
SRC_DIR := $(realpath ./)

# Core build files
SYSTEM := $(realpath ./minimal.system)
IMAGE_FILE := loader.img
REPORT_FILE := report.txt
BUILD_MAKE := minimal.mk

# Export new variables for sub-makes
export MICROKIT_BOARD
export MICROKIT_CONFIG
export BOARD_DIR
export ARCH
export IMAGE_FILE
export REPORT_FILE
export INC_DIR
export SRC_DIR
export DEPS
export SYSTEM
export GUEST_FILE


### Build rules ###
all: clean build 

build: $(BUILD_DIR)/$(IMAGE_FILE) $(BUILD_DIR)/$(REPORT_FILE) 

clean:
	rm -rf $(BUILD_DIR)

# Copy minimal makefile into build dir and run
$(BUILD_DIR)/$(IMAGE_FILE) $(BUILD_DIR)/$(REPORT_FILE): 
	mkdir -p $(BUILD_DIR)
	cp $(BUILD_MAKE) $(BUILD_DIR)/Makefile
	$(MAKE) -C $(BUILD_DIR) MICROKIT_SDK=$(MICROKIT_SDK) BUILD_DIR=$(BUILD_DIR) GUEST_FILE=$(GUEST_FILE) $(notdir $@)

# Only allow qemu when built for qemu_virt_aarch64
ifeq ($(strip $(MICROKIT_BOARD)), qemu_virt_aarch64)
qemu: all
	qemu-system-aarch64 -machine virt,virtualization=on,highmem=off,secure=off \
				-cpu cortex-a53 \
				-serial mon:stdio \
				-device loader,file=$(BUILD_DIR)/$(IMAGE_FILE),addr=0x70000000,cpu-num=0 \
				-m size=2G \
				-nographic
else
qemu:
	echo "QEMU not supported for $(MICROKIT_BOARD) (skipping build and simulation)"
endif